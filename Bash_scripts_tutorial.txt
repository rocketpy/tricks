#  Bash Shell (Bourne Again SHell) and command-line interface (CLI)

# start every Bash script with:  #!/bin/bash


# Top Bash Commands:

# in [ ] means that it’s optional. Some commands can be used without options or specifying files !!!

# ls — List directory contents
- Syntax: ls [option(s)] [file(s)]
ls [option ...] [file]...
ls [-a | --all] [-A | --almost-all] [--author] [-b | --escape]
   [--block-size=size] [-B | --ignore-backups] [-c] [-C] [--color[=when]] 
   [-d | --directory] [-D | --dired] [-f] [-F | --classify] [--file-type]
   [--format=word] [--full-time] [-g] [--group-directories-first]
   [-G | --no-group] [-h | --human-readable] [--si] 
   [-H | --dereference-command-line] [--dereference-command-line-symlink-to-dir]
   [--hide=pattern] [--indicator-style=word] [-i | --inode]
   [-I | --ignore=pattern] [-k | --kibibytes] [-l] [-L | --dereference] 
   [-m] [-n | --numeric-uid-gid] [-N | --literal] [-o] 
   [-p | --indicator-style=slash] [-q | --hide-control-chars]
   [--show-control-chars] [-Q | --quote-name] [--quoting-style=word]
   [-r | --reverse] [-R | --recursive] [-s | --size] [-S] [--sort=word]
   [--time=word] [--time-style=style] [-t] [-T | --tabsize=cols]
   [-u] [-U] [-v] [-w | --width=cols] [-x] [-X] [-Z | --context] [-1]

ls [--help | --version]
- Common options: -a, -l
"""
ls Options:
-a  Show all (including hidden)
-R  Recursive list
-r  Reverse order
-t  Sort by last modified
-S  Sort by file size
-l  Long listing format
-1  One file per line
-m  Comma-­sep­arated output
-Q  Quoted output
"""

# touch — Creates a file
- Syntax: touch [option(s)] file_name(s)
- Common options: -a, -m, -r, -d
"""
Option	description:
-a	Updates only the file’s access time of an existing file.
-c	Avoids creating a new file even if the file does not exist.
-d	Updates a timestamp using the specified time and date string.
-h	Updates timestamp of a symbolic link.
-m	Updates the file modification date and time of an existing file.
-r	Updates a timestamp to the timestamp of the referenced file.
-t	Updates a timestamp if the stamp is in the data and time format.
"""

# mkdir — Create a directory
- Syntax: mkdir [option(s)] directory_name(s)
- Common options: -m, -p, -v
# mkdir [-m=mode] [-p] [-v] [-Z=context] directory [directory ...]
#  -m option is used to set the mode of the directory i.e. permissions such as read, write and execute for the created directory.
# -p option: enables the user to create parent directories as per the requirement. If the directories exist already, no error will be displayed.
# -v, –verbose: This option displays a verbose information of each directory that is created.
# mkdir –version
# mkdir --help

# echo — Prints text to the terminal window
- Syntax: echo [option(s)] [string(s)]
- Common options: -e, -n
"""
Option description:
-n	Display the output without a newline after it. This option suppresses the trailing newline.
-E	Disable the escape characters' interpretation. This is the default option.
-e	Enable the following escape characters interpretation:
\\	Display backslash-escaped characters.
\a	Display the output with a sound alert.
\b	Create a backspace character, which is equivalent to using the backspace key.
\c	Ignore any output after the escape character.
\e	Create an escape character, which is equivalent to using the Esc key.
\f	Create a form feed character, which makes the printer automatically go to the beginning of the next page.
\n	Add a new line in the output.
\r	Perform a carriage return.
\v	Create vertical tab spaces.
\t	Create horizontal tab spaces.
\NNN	Octal byte value of NNN.
\xHH	Hexadecimal byte value of HH.
"""

# pwd — Print working (current directory) directory
- Syntax: pwd [option(s)]
- Common options: options aren’t typically used with pwd

# rmdir — Remove directory
- Syntax: rmdir [option(s)] directory_names
- Common options: -p

# grep — Search (search text for patterns specified by the user)
- Syntax: grep [option(s)] pattern [file(s)]
- Common options: -i, -c, -n
"""
Options	description:
-i	Ignore case in search results.
-w	Find only the whole words.
-v	Display non-matching lines.
-n	Display line number for matching lines.
-r	Perform recursive search.
-l	Print only the file names.
-c	Show only a count of the number of matches.
--color	Highlight matched string in different colors.
"""

# cd — Change directory
- Syntax: cd [option(s)] directory
- Common options: options aren’t typically used with cd

# mv — Move or rename directory
- Syntax: mv [option(s)] argument(s)
- Common options: -i, -b
"""
 -i (Interactive): Like in cp, the -i option makes the command ask the user for confirmation before moving a file that would overwrite an existing file,
     you have to press y for confirm moving, any other key leaves the file as it is. This option doesn’t work if the file doesn’t exist,
     it simply rename it or move it to new location. 
 -b(backup): With this option, it is easier to take a backup of an existing file that will be overwritten as a result of the mv command.
     This will create a backup file with the tilde character(~) appended to it. 
 -n (no-clobber): With -n option, mv prevent an existing file from being overwritten. 
    In the following example the effect is for nothing to happen as a file would be overwritten. 
 -f (Force): mv prompts for confirmation overwriting the destination file if a file is write-protected.
     The -f option overrides this minor protection and overwrites the destination file forcefully and deletes the source file. 
 –version: This option is used to display the version of mv which is currently running on your system. 
"""

# locate — Locate a specific file or directory
- Syntax: locate [option(s)] file_name(s)
- Common options: -q, -n, -i
"""
    / (slash) — search the whole system.
    . (dot) — search from the folder you’re currently working on (current directory).
    ~ (tilde) — to search from your home folder.
    
-A, --all	Displays only the entries matching all the specified pattern(s).
-b, --basename	Matches only the base name against the specified patterns.
-c, --count	Outputs the number of matching entries instead of the file names.
-d, --database [DBPATH]	Replaces the default database with [DBPATH] - a colon-separated list of database file names.
-e, --existing	Only displays entries for existing files.
-L, --follow	Use to check whether files exist if the --existing option is specified. The --follow option omits broken symbolic links.
-i, --ignore-case	Ignores pattern case sensitivity.
-p, --ignore-spaces	Ignores punctuation and spaces when matching patterns.
-t, --transliterate	Uses iconv transliteration to ignore accents and diacritics when matching patterns.
-l, --limit, -n [LIMIT]	Use to exit successfully after finding a [LIMIT] number of entries.
-0, --null	Separates output entries using the ASCII NUL character instead of printing each entry in a new line.
-S, --statistics	Prints the statistics about each read database to standard output instead of searching for files.
-q, --quiet	Hides any errors encountered while reading and processing databases.
-r, --regexp [REGEXP]	Used for searching a basic regular expression [REGEXP]. Specifying this option doesn't allow [pattern] arguments.
-w, --wholename	Matches only the whole path name against the specified patterns.
-h, --help	Displays the help file with a list of all available options.
"""

# less — view the contents of a text file
- Syntax: less file_name
- Common options: -e, -f, -n
"""
Options	description:
-N	This option print line number
-X	This option leaves the content as it is in the terminal
+F	This option Monitors file in real-time
-V	This option displays the version of less
-I	Ignore case when searching
-p	Start search at the first occurrence of a certain pattern in the file
-s	This option causes consecutive blank lines to be squeezed which means it removes blank lines and replaces them with one single blank line
-G	This option disables all highlighting of strings discovered by search commands
-O	This option replaces an existing file without asking you for confirmation
"""

# cat — Read a file, create a file, and concatenate files
- Syntax: cat [option(s)] [file_name(s)] [-] [file_name(s)]
- Common options: -n
"""
Options	description:
  -A, --show-all   	equivalent to -vET
  -b, --number-nonblank 	number nonempty output lines, overrides -n
  -e    	equivalent to -vE
  -E, --show-ends 	display $ at end of each line
  -n, --number   	numbers all output lines
  -s, --squeeze-blank 	suppress repeated empty output lines
  -t 	equivalent to -vT
  -T, --show-tabs	display TAB characters as ^I
  -u   	(ignored)
  -v, --show-nonprinting  	use ^ and M- notation, except for LFD and TAB
  --help	display other command options
  --version	Prints version information and exit
"""

# man — Print manual or get help for a command(what a command does)
- Syntax: man [option(s)] keyword(s)
- Common options: -w, -f, -b
"""
 $ man -f ls
 -f option: One may not be able to remember the sections in which a command is present. 
            So this option gives the section in which the given command is present.
 $ man -a intro
 -a option: This option helps us to display all the available intro manual pages in succession.
 $ man -k cd
 -k option: This option searches the given command as a regular expression in all the manuals
            and it returns the manual pages with the section number in which it is found.
 $ man -w ls
 -w option: This option returns the location in which the manual page of a given command is present.
"""

# compgen — Shows all available commands, aliases, and functions
- Syntax: compgen [option(s)]
- Common options: -a, -c, -d
"""
compgen -a:  To list all the bash aliases
compgen -c:  To list all commands that are available to be directly executed.
compgen -b:  To list all the bash built-ins
compgen -k:  To list all the bash keywords
"""

# clear — Clear a terminal window
- Syntax: clear

# history — list most recent commands
- Syntax: history
- Common options: -c, -d
"""
Options:
-c 	Clear the history list by deleting all of the entries.
-d offset 	Delete the history entry at offset OFFSET.
-a 	Append history lines from this session to the history file.
-n 	Read all history lines not already read from the history file.
-r 	Read the history file and append the contents to the history list.
-w 	Write the current history to the history file and append them to the history list
-p 	Perform history expansion on each ARG and display the result without storing it in the history list.
-s 	Append the ARGs to the history list as a single entry.
"""

# chmod — Sets the file permissions flag on a file or folder
- Syntax: chmod [option(s)] permissions file_name
- Common options: -f, -v
"""
-c, --changes 	Like --verbose, but gives verbose output only when a change is actually made.
-f, --silent, --quiet 	Quiet mode; suppress most error messages.
-v, --verbose 	Verbose mode; output a diagnostic message for every file processed.
--no-preserve-root 	Do not treat '/' (the root directory) in any special way, which is the default setting.
--preserve-root 	Do not operate recursively on '/'.
--reference=RFILE 	Set permissions to match those of file RFILE, ignoring any specified MODE.
-R, --recursive 	Change files and directories recursively.
--help 	Display a help message and exit.
--version 	Output version information and exit.
"""

# chown - Command changes ownership of files and directories in a filesystem.
"""
chown [-c|--changes] [-v|--verbose] [-f|--silent|--quiet] [--dereference]
      [-h|--no-dereference] [--preserve-root]
      [--from=currentowner:currentgroup] [--no-preserve-root]
      [-R|--recursive] [--preserve-root] [-H] [-L] [-P]
      {new-owner|--reference=ref-file} file ...
chown --help
chown --version

Options
Option 	Description
-c,
--changes 	Similar to --verbose mode, but only displays information about files that are actually changed. For example:

changed ownership of 'dir/dir1/file1' from hope:neil to hope:hope

-v,
--verbose 	Display verbose information for every file processed. For example:

changed ownership of 'dir/dir1/file1' from hope:neil to hope:hopeownership of 'dir/dir1' retained as hope:hope

-f,
--silent,
--quiet 	Quiet mode. Do not display output.
--dereference 	Dereference all symbolic links. If file is a symlink,
change the owner of the referenced file, not the symlink itself. This is the default behavior.
-h,
--no-dereference 	Never dereference symbolic links. If file is a symlink,
change the owner of the symlink rather than the referenced file.
--from=currentowner:currentgroup 	Change the owner or group of each file only if its current owner or
group match currentowner and/or currentgroup. Either may be omitted, 
in which case a match is not required for the other attribute.
--no-preserve-root 	Do not treat / (the root directory) in any special way.
This is the default behavior. 
If the --preserve-root option is previously specified in the command, this option will cancel it.
--reference=ref-file 	Use the owner and group of file ref-file, rather than specifying ownership with new-owner.
-R,
--recursive 	Operate on files and directories recursively.
Enter each matching directory, and operate on all its contents.
"""

# exit — Exit out of a directory
- Syntax: exit
- Common options: n/a

# kill — terminate stalled processes
- Syntax: kill [signal or option(s)] PID(s) 
  # To find the PID, use the ps command accompanied by options -aux.
- Common options: -p

# sleep — delay a process for a specified amount of time
- Syntax: sleep number [suffix]
- Common options: n/a

# head — Read the start of a file(displays the first 10 lines of a file)
- Syntax: head [option(s)] file(s)
- Common options: -n

# tail — Read the end of a file(displays the last 10 lines of a file)
- Syntax: tail [option(s)] file_names
- Common options: -n

# Find Command Syntax

The basic syntax of find command:
find [options] [path...] [expression]
"""
Options	description:
-P	Never follow the symbolic links.
-L	Follow the symbolic links.
-H	Follow the symbolic links only while processing the command-line arguments.
-D	Supply debug options, such as tree, stat, opt, and rates.
-Olevel	Enable query optimization, and specify a decimal number that represents the optimization level. Accepted values are 0, 1, 2, and 3.
-name	Search files and directories that have the given name.
-user	Search files and directories owned by the specified user name.
-exec	Execute specified command on the files and folders searched using the find command.
"""

# getfacl - displays the file name, owner, the group, and the ACL (Access Control List).
If a directory has a default ACL, getfacl also displays the default ACL. Non-directories cannot have default ACLs.
# Syntax:
# getfacl [-dRLPvh] file ...
# getfacl [-dRLPvh] -
"""
Options
--access 	Display the file access control list.
-d, --default 	Display the default access control list.
--omit-header 	Do not display the comment header (the first three lines of each file's output).
--all-effective 	Print all effective rights comments, even if identical to the rights defined by the ACL entry.
--no-effective 	Do not print effective rights comments.
--skip-base 	Skip files that only have the base ACL entries (owner, group, others).
-R, --recursive 	List the ACLs of all files and directories recursively.
-L, --logical 	"Logical walk" (follow symbolic links). The default behavior is to follow symbolic link arguments,
   and to skip symbolic links encountered in subdirectories.
-P, --physical 	"Physical walk" (skip all symbolic links). This also skips symbolic link arguments.
--tabular 	Use an alternative tabular output format. The ACL and the default ACL are displayed side by side.
   Permissions that are ineffective due to the ACL mask entry are displayed capitalized. 
   The entry tag names for the ACL_USER_OBJ and ACL_GROUP_OBJ entries are also displayed in capital letters, which helps in spotting those entries.
--absolute-names 	Do not strip leading slash characters (‘/’). The default behavior is to strip leading slash characters.
"""


# create a custom Bash commands !!!
- Syntax: alias alias_name = “command_to_run”

# simple example:
# alias c = “clear”
# alias www = ‘python -m SimpleHTTPServer 8000’
# alias chrome = ‘/opt/google/chrome/chrome’


